generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  info      About?
  password  String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String   @unique
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model About {
  id                String      @id @default(auto()) @map("_id") @db.ObjectId
  heading           String
  subHeading        String
  about             String
  contactHeading    String      @default("")
  contactSubHeading String      @default("")
  image             CloudImage? @relation(fields: [cloudImageId], references: [id])
  cloudImageId      String?     @db.ObjectId
  userId            String      @unique @db.ObjectId
  user              User        @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Project {
  id                  String       @id @default(auto()) @map("_id") @db.ObjectId
  title               String
  description         String
  images              CloudImage[]
  isMobileApplication Boolean      @default(false)
  gitHubLink          String
  demoLink            String
  tagsId              String[]     @db.ObjectId
  tags                TechStack[]  @relation(fields: [tagsId], references: [id])
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
}

model CloudImage {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  publicId  String     @unique
  url       String
  projectId String?    @db.ObjectId
  project   Project?   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  techStack TechStack?
  About     About[]
}

model TechStack {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  image        CloudImage? @relation(fields: [cloudImageId], references: [id])
  cloudImageId String      @unique @db.ObjectId
  name         String      @unique
  projectIds   String[]    @db.ObjectId
  projects     Project[]   @relation(fields: [projectIds], references: [id])
}

model Contacts {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  message   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
