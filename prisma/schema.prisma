generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  about     About?
  password  String
  email     String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]

  @@index([email])
}

model Session {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model About {
  id     String @id @default(uuid())
  about  String
  name   String
  userId String @unique
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Project {
  id                  String       @id @default(uuid())
  title               String
  description         String
  images              CloudImage[]
  techStack           TechStack[]
  isMobileApplication Boolean      @default(false)
  gitHubRepo          String
  demoLink            String
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
}

model CloudImage {
  id         String     @id @default(uuid())
  publicId   String     @unique
  url        String
  projectId  String?
  project    Project?   @relation(fields: [projectId], references: [id], onDelete: Cascade)
  techStacks TechStack?
}

model TechStack {
  id           String      @id @default(uuid())
  image        CloudImage? @relation(fields: [cloudImageId], references: [id])
  cloudImageId String      @unique
  projects     Project[]
  name         String      @unique
}

model Contacts {
  id        String   @id @default(uuid())
  name      String
  email     String
  message   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
